pipeline {
    agent {
        docker {
            image 'demopq/robot-python-sele-chor:phuongttq'
            args '-u root'
        }
    }
    
    parameters {
        string(name: 'SCHEDULE_ID', defaultValue: '', description: 'Schedule ID from TestOps')
        string(name: 'CRON_EXPRESSION', defaultValue: '', description: 'Cron expression for scheduling')
    }
    
    environment {
        // S·ª≠ d·ª•ng SCHEDULE_ID t·ª´ environment (ƒë∆∞·ª£c set trong job config) ho·∫∑c t·ª´ parameters
        FINAL_SCHEDULE_ID = "${env.SCHEDULE_ID ?: params.SCHEDULE_ID}"
    }
    
    stages {
        stage('Get Schedule ID') {
            steps {
                script {
                    // Th·ª≠ ƒë·ªçc SCHEDULE_ID t·ª´ file tr∆∞·ªõc
                    def scheduleId = ''
                    try {
                        if (fileExists('schedule_id.txt')) {
                            scheduleId = readFile('schedule_id.txt').trim()
                            echo "üìñ ƒê·ªçc SCHEDULE_ID t·ª´ file: ${scheduleId}"
                        }
                    } catch (Exception e) {
                        echo "‚ö†Ô∏è Kh√¥ng th·ªÉ ƒë·ªçc file schedule_id.txt: ${e.message}"
                    }
                    
                    // N·∫øu file kh√¥ng c√≥, th·ª≠ t·ª´ environment ho·∫∑c parameters
                    if (!scheduleId) {
                        scheduleId = env.SCHEDULE_ID ?: params.SCHEDULE_ID ?: ''
                        echo "üìñ ƒê·ªçc SCHEDULE_ID t·ª´ env/params: ${scheduleId}"
                    }
                    
                    // L∆∞u v√†o environment variable ƒë·ªÉ s·ª≠ d·ª•ng trong post actions
                    env.FINAL_SCHEDULE_ID = scheduleId
                    echo "‚úÖ FINAL_SCHEDULE_ID = ${env.FINAL_SCHEDULE_ID}"
                }
            }
        }
        
        stage('Run Robot Tests') {
            steps {
                sh '''
                    mkdir -p results
                    robot --outputdir results Bases/Testcase/login.robot
                '''
            }
        }
    }

    post {
        always {
            robot outputPath: 'results'
            sh '''
                # N√©n to√†n b·ªô th∆∞ m·ª•c k·∫øt qu·∫£ (results) bao g·ªìm report.html, log.html, output.xml, ...
                tar czf results.tar.gz -C results .
                # G·ª≠i file n√©n v·ªÅ backend
                if [ ! -z "$FINAL_SCHEDULE_ID" ]; then
                    echo "üì§ G·ª≠i report cho Schedule: $FINAL_SCHEDULE_ID"
                    curl -X POST -F "schedule_id=$FINAL_SCHEDULE_ID" -F "report=@results.tar.gz" http://192.168.1.31:8000/upload_schedule_report
                else
                    echo "‚ùå Kh√¥ng t√¨m th·∫•y SCHEDULE_ID, kh√¥ng th·ªÉ upload report"
                    echo "üîç Debug info:"
                    echo "   env.SCHEDULE_ID = '$SCHEDULE_ID'"
                    echo "   params.SCHEDULE_ID = '$params.SCHEDULE_ID'"
                    echo "   FINAL_SCHEDULE_ID = '$FINAL_SCHEDULE_ID'"
                    if [ -f "schedule_id.txt" ]; then
                        echo "   schedule_id.txt content: '$(cat schedule_id.txt)'"
                    else
                        echo "   schedule_id.txt kh√¥ng t·ªìn t·∫°i"
                    fi
                fi
            '''
        }
    }
}
