pipeline {
    agent {
        docker {
            image 'demopq/robot-python-sele-chor:phuongttq'
            args '-u root'
        }
    }

    environment {
        // Có thể set từ Jenkins job parameters hoặc build parameters
        TASK_TYPE = "${params.TASK_TYPE ?: 'execution'}"  // 'execution' hoặc 'plan'
        TASK_ID = "${params.TASK_ID ?: '1'}"  // ID của execution hoặc plan
    }

    stages {
        stage('Run Robot Tests') {
            steps {
                sh '''
                    mkdir -p results
                    robot --outputdir results Bases/Testcase/
                '''
            }
        }
    }

    post {
        always {
            script {
                // ✅ Phân tích kết quả Robot Framework
                robot outputPath: 'results'

                // ✅ Nén và chuẩn bị gửi report
                sh '''
                    tar czf results.tar.gz -C results .
                '''
            }
        }
        
        success {
            script {
                // ✅ Gửi webhook khi build thành công
                def webhookUrl = 'http://backend:8000/api/reports/jenkins/webhook'
                def payload = [
                    name: env.JOB_NAME,
                    build: [
                        number: env.BUILD_NUMBER,
                        result: currentBuild.result,
                        status: 'FINISHED',
                        timestamp: currentBuild.startTimeInMillis,
                        duration: currentBuild.duration
                    ],
                    task_type: env.TASK_TYPE,
                    task_id: env.TASK_ID
                ]
                
                // Gửi HTTP request đến webhook
                httpRequest(
                    url: webhookUrl,
                    httpMode: 'POST',
                    contentType: 'APPLICATION_JSON',
                    requestBody: groovy.json.JsonOutput.toJson(payload),
                    validResponseCodes: '200,201,202'
                )
                
                echo "✅ Webhook sent to backend for ${env.TASK_TYPE} job: ${env.JOB_NAME} (ID: ${env.TASK_ID})"
            }
        }
        
        failure {
            script {
                // ✅ Gửi webhook ngay cả khi build thất bại
                def webhookUrl = 'http://backend:8000/api/reports/jenkins/webhook'
                def payload = [
                    name: env.JOB_NAME,
                    build: [
                        number: env.BUILD_NUMBER,
                        result: currentBuild.result,
                        status: 'FINISHED',
                        timestamp: currentBuild.startTimeInMillis,
                        duration: currentBuild.duration
                    ],
                    task_type: env.TASK_TYPE,
                    task_id: env.TASK_ID
                ]
                
                // Gửi HTTP request đến webhook
                httpRequest(
                    url: webhookUrl,
                    httpMode: 'POST',
                    contentType: 'APPLICATION_JSON',
                    requestBody: groovy.json.JsonOutput.toJson(payload),
                    validResponseCodes: '200,201,202'
                )
                
                echo "✅ Webhook sent to backend for failed ${env.TASK_TYPE} job: ${env.JOB_NAME} (ID: ${env.TASK_ID})"
            }
        }
    }
}
